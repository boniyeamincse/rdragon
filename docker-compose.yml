version: '3.8'

services:
  # Using SQLite as alternative to Postgres for simplicity
  # Data persists via volume

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  web:
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DB_URL=/app/recon.db
      - REDIS_URL=redis://redis:6379
      - QUEUE_NAME=recon_queue
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./modules:/app/modules:ro
      - db_data:/app
      - results_data:/app/results
    command: uvicorn api.app:app --host 0.0.0.0 --port 8000 --reload

  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    environment:
      - DB_URL=/app/recon.db
      - REDIS_URL=redis://redis:6379
      - QUEUE_NAME=recon_queue
    depends_on:
      redis:
        condition: service_healthy
      web:
        condition: service_started
    volumes:
      - ./modules:/app/modules:ro
      - db_data:/app
      - results_data:/app/results
    command: python worker/runner.py

volumes:
  redis_data:
  db_data:
  results_data: